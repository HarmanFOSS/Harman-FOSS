diff -ur dosfstools-2.11/dosfsck/boot.c dosfstools-2.11_/dosfsck/boot.c
--- dosfstools-2.11/dosfsck/boot.c	2020-05-20 15:19:58.761696326 +0000
+++ dosfstools-2.11_/dosfsck/boot.c	2020-05-22 11:50:41.891838180 +0000
@@ -85,8 +85,8 @@
 	   (unsigned long long)fs->fat_start,
 	   (unsigned long long)fs->fat_start/lss);
     printf("%10d FATs, %d bit entries\n",b->fats,fs->fat_bits);
-    printf("%10d bytes per FAT (= %u sectors)\n",fs->fat_size,
-	   fs->fat_size/lss);
+    printf("%10lld bytes per FAT (= %llu sectors)\n", (long long)fs->fat_size,
+	   (long long)fs->fat_size / lss);
     if (!fs->root_cluster) {
 	printf("Root directory starts at byte %llu (sector %llu)\n",
 	       (unsigned long long)fs->root_start,
@@ -272,7 +272,7 @@
     struct boot_sector b;
     unsigned total_sectors;
     unsigned short logical_sector_size, sectors;
-    unsigned fat_length;
+    off_t fat_length;
     off_t data_size;
 
     fs_read(0,sizeof(b),&b);
@@ -291,6 +291,8 @@
 	    logical_sector_size);
     fat_length = CF_LE_W(b.fat_length) ?
 		 CF_LE_W(b.fat_length) : CF_LE_L(b.fat32_length);
+    if (!fat_length)
+	die("FAT size is zero.");
     fs->fat_start = (off_t)CF_LE_W(b.reserved)*logical_sector_size;
     fs->root_start = ((off_t)CF_LE_W(b.reserved)+b.fats*fat_length)*
       logical_sector_size;
@@ -298,6 +300,8 @@
     fs->data_start = fs->root_start+ROUND_TO_MULTIPLE(fs->root_entries <<
       MSDOS_DIR_BITS,logical_sector_size);
     data_size = (off_t)total_sectors*logical_sector_size-fs->data_start;
+    if (data_size < fs->cluster_size)
+	die("Filesystem has no space for any data clusters");
     fs->clusters = data_size/fs->cluster_size;
     fs->root_cluster = 0; /* indicates standard, pre-FAT32 root dir */
     fs->fsinfo_start = 0; /* no FSINFO structure */
diff -ur dosfstools-2.11/dosfsck/dosfsck.h dosfstools-2.11_/dosfsck/dosfsck.h
--- dosfstools-2.11/dosfsck/dosfsck.h	2020-05-20 15:20:01.397690242 +0000
+++ dosfstools-2.11_/dosfsck/dosfsck.h	2020-05-22 11:57:11.912157875 +0000
@@ -130,7 +130,7 @@
 typedef struct {
     int nfats;
     loff_t fat_start;
-    unsigned int fat_size; /* unit is bytes */
+    off_t fat_size; /* unit is bytes */
     unsigned int fat_bits; /* size of a FAT entry */
     unsigned int eff_fat_bits; /* # of used bits in a FAT entry */
     unsigned long root_cluster; /* 0 for old-style root dir */
