*******************************************************************************
Date         : 2017-11-24
Author       : Bu Yewen
Harman International Industries, Incorporated

Description  : This patch is for medialaunch connect MTP bugs.
ChangeList   : 4914128 & 5074727
*******************************************************************************

diff --git a/src/simple-mtpfs-fuse.cpp b/src/simple-mtpfs-fuse.cpp
index 588968d..c8c28c3 100644
--- a/src/simple-mtpfs-fuse.cpp
+++ b/src/simple-mtpfs-fuse.cpp
@@ -79,13 +79,36 @@ int wrap_utime(const char *path, struct utimbuf *ubuf)
 
 int wrap_open(const char *path, struct fuse_file_info *file_info)
 {
-    return SMTPFileSystem::instance()->open(path, file_info);
+    //return SMTPFileSystem::instance()->open(path, file_info);
+    return 0;
 }
 
 int wrap_read(const char *path, char *buf, size_t size, off_t offset,
     struct fuse_file_info *file_info)
 {
+    logerr("size is ",size,"offset is ",offset,"\n");
     return SMTPFileSystem::instance()->read(path, buf, size, offset, file_info);
+	
+}
+
+int wrap_readbuf(const char *path, struct fuse_bufvec **bufp, size_t size, off_t off, struct fuse_file_info *fileinfo)
+{
+
+	logerr("size is ",size,"offset is ",off,"\n");
+	int readsize = 0;
+	struct fuse_bufvec* fbuf =(struct fuse_bufvec*)malloc(sizeof(struct fuse_bufvec));
+   if(!fbuf)
+      return -ENOENT;
+	*fbuf = FUSE_BUFVEC_INIT(size);
+	void* mem = NULL;
+	mem = malloc(size);
+	if(!mem)
+		return -ENOENT;
+	fbuf->buf[0].mem = mem;
+	readsize = SMTPFileSystem::instance()->read(path,(char*)mem,size,off,fileinfo);
+		
+	*bufp = fbuf;
+	return readsize;
 }
 
 int wrap_write(const char *path, const char *buf, size_t size, off_t offset,
@@ -106,7 +129,8 @@ int wrap_flush(const char *path, struct fuse_file_info *file_info)
 
 int wrap_release(const char *path, struct fuse_file_info *file_info)
 {
-    return SMTPFileSystem::instance()->release(path, file_info);
+    //return SMTPFileSystem::instance()->release(path, file_info);
+	 return 0;
 }
 
 int wrap_fsync(const char *path, int datasync, struct fuse_file_info *file_info)
@@ -226,6 +250,7 @@ SMTPFileSystem::SMTPFileSystem():
     m_fuse_operations.utime = wrap_utime;
     m_fuse_operations.open = wrap_open;
     m_fuse_operations.read = wrap_read;
+	 m_fuse_operations.read_buf = wrap_readbuf;
     m_fuse_operations.write = wrap_write;
     m_fuse_operations.statfs = wrap_statfs;
     m_fuse_operations.flush = wrap_flush;
@@ -620,10 +645,19 @@ int SMTPFileSystem::open(const char *path, struct fuse_file_info *file_info)
 int SMTPFileSystem::read(const char *path, char *buf, size_t size,
     off_t offset, struct fuse_file_info *file_info)
 {
+#if 0	
     int rval = ::pread(file_info->fh, buf, size, offset);
     if (rval < 0)
         return -errno;
     return rval;
+#endif
+#if 1
+
+	 const std::string std_path(path);
+	 int ret  = m_device.filesplitPull(std_path,"",size,offset,(unsigned char*)buf);
+	 return ret;
+#endif
+
 }
 
 int SMTPFileSystem::write(const char *path, const char *buf, size_t size,
diff --git a/src/simple-mtpfs-mtp-device.cpp b/src/simple-mtpfs-mtp-device.cpp
index f5ab838..ebeeeeb 100644
--- a/src/simple-mtpfs-mtp-device.cpp
+++ b/src/simple-mtpfs-mtp-device.cpp
@@ -467,6 +467,44 @@ int MTPDevice::rename(const std::string &oldpath, const std::string &newpath)
 #endif
 }
 
+
+int MTPDevice::filesplitPull(const std::string &src,const std::string &dst,uint32_t size, uint32_t offset,unsigned char* buf)
+{
+	const std::string src_basename(smtpfs_basename(src));
+	const std::string src_dirname(smtpfs_dirname(src));
+	const TypeDir *dir_parent = dirFetchContent(src_dirname);
+	const TypeFile *file_to_fetch = dir_parent ? dir_parent->file(src_basename) : nullptr;
+	if (!dir_parent) {
+		logerr("Can not fetch '", src, "'.\n");
+		return -EINVAL;
+	}
+	if (!file_to_fetch) {
+		logerr("No such file '", src, "'.\n");
+		return -ENOENT;
+	}
+	uint32_t readlen = 0;
+	unsigned char* tmpbuf = NULL;
+	int rval = LIBMTP_GetPartialObject(m_device,file_to_fetch->id(),offset,size,&tmpbuf,&readlen);
+	memcpy(buf,tmpbuf,readlen);
+	if(tmpbuf)
+	{
+		free(tmpbuf);
+		tmpbuf = NULL;
+	}
+
+	//criticalLeave();
+	if (rval != 0) {
+		logerr("Could not fetch file '", src, "'.\n");
+
+		LIBMTP_Dump_Errorstack(m_device);
+		LIBMTP_Clear_Errorstack(m_device);
+		return -ENOENT;
+	}
+	logmsg("File fetched '", src, "'.\n");
+	return readlen;
+
+}
+
 int MTPDevice::filePull(const std::string &src, const std::string &dst)
 {
     const std::string src_basename(smtpfs_basename(src));
@@ -660,9 +698,16 @@ bool MTPDevice::listDevices(bool verbose, const std::string &dev_file)
         if (!dev_file.empty() &&
             !(bnum == raw_devices[i].bus_location && dnum == raw_devices[i].devnum))
             continue;
+        
+        char bus_num_str[4];
+        char dev_num_str[4];
+        sprintf(bus_num_str, "%03d", raw_devices[i].bus_location);
+        sprintf(dev_num_str, "%03d", raw_devices[i].devnum);
+
         std::cout << i + 1 << ": "
             << (raw_devices[i].device_entry.vendor ? raw_devices[i].device_entry.vendor : "Unknown vendor ")
             << (raw_devices[i].device_entry.product ? raw_devices[i].device_entry.product : "Unknown product")
+            << " /dev/bus/usb/" << bus_num_str << "/" << dev_num_str
             << std::endl;
 #ifdef HAVE_LIBMTP_CHECK_CAPABILITY
             MTPDevice dev;
diff --git a/src/simple-mtpfs-mtp-device.h b/src/simple-mtpfs-mtp-device.h
index ffab1b8..bc5e665 100644
--- a/src/simple-mtpfs-mtp-device.h
+++ b/src/simple-mtpfs-mtp-device.h
@@ -82,7 +82,7 @@ public:
     int filePush(const std::string &src, const std::string &dst);
     int fileRemove(const std::string &path);
     int fileRename(const std::string &oldpath, const std::string &newpath);
-
+	 int filesplitPull(const std::string &src,const std::string &dst,uint32_t size, uint32_t offset,unsigned char* buf);
     Capabilities getCapabilities() const;
 
     static bool listDevices(bool verbose, const std::string &dev_file);
