/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.v201512091035.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/fake/legacy/service/LegacyInterfaceNoObjectManagerStubDefault.hpp>
#include <assert.h>

namespace v1 {
namespace fake {
namespace legacy {
namespace service {

LegacyInterfaceNoObjectManagerStubDefault::LegacyInterfaceNoObjectManagerStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(LegacyInterfaceNoObjectManager::getInterfaceVersion()) {
}

const CommonAPI::Version& LegacyInterfaceNoObjectManagerStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client) {
    (void)_client;
    return interfaceVersion_;
}

LegacyInterfaceNoObjectManagerStubRemoteEvent* LegacyInterfaceNoObjectManagerStubDefault::initStubAdapter(const std::shared_ptr<LegacyInterfaceNoObjectManagerStubAdapter> &_adapter) {
    LegacyInterfaceStubDefault::initStubAdapter(_adapter);
    CommonAPI::Stub<LegacyInterfaceNoObjectManagerStubAdapter, LegacyInterfaceNoObjectManagerStubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}





LegacyInterfaceNoObjectManagerStubDefault::RemoteEventHandler::RemoteEventHandler(LegacyInterfaceNoObjectManagerStubDefault *_defaultStub)
    : LegacyInterfaceStubDefault::RemoteEventHandler(_defaultStub),
      defaultStub_(_defaultStub) {
}

} // namespace service
} // namespace legacy
} // namespace fake
} // namespace v1
