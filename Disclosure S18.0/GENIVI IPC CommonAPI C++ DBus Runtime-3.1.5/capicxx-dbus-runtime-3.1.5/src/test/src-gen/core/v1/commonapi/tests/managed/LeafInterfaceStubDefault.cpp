/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.v201512091035.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/commonapi/tests/managed/LeafInterfaceStubDefault.hpp>
#include <assert.h>

namespace v1 {
namespace commonapi {
namespace tests {
namespace managed {

LeafInterfaceStubDefault::LeafInterfaceStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(LeafInterface::getInterfaceVersion()) {
}

const CommonAPI::Version& LeafInterfaceStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client) {
    (void)_client;
    return interfaceVersion_;
}

LeafInterfaceStubRemoteEvent* LeafInterfaceStubDefault::initStubAdapter(const std::shared_ptr<LeafInterfaceStubAdapter> &_adapter) {
    CommonAPI::Stub<LeafInterfaceStubAdapter, LeafInterfaceStubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}


void LeafInterfaceStubDefault::testLeafMethod(const std::shared_ptr<CommonAPI::ClientId> _client, int32_t _inInt, std::string _inString, testLeafMethodReply_t _reply) {
    (void)_client;
    (void) _inInt;
    (void) _inString;
    LeafInterface::testLeafMethodError error;
    int32_t outInt = 0;
    std::string outString = "";
    _reply(error, outInt, outString);
}




LeafInterfaceStubDefault::RemoteEventHandler::RemoteEventHandler(LeafInterfaceStubDefault *_defaultStub)
    : 
      defaultStub_(_defaultStub) {
}

} // namespace managed
} // namespace tests
} // namespace commonapi
} // namespace v1
