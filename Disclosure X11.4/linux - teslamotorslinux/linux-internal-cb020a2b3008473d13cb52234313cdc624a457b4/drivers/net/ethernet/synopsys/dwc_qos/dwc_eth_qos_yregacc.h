/*
 * DWC Ether QOS controller driver for Samsung TRAV SoCs
 *
 * Copyright (C) Synopsys India Pvt. Ltd.
 * Copyright (C) 2017 Samsung Electronics Co., Ltd.
 *		http://www.samsung.com
 *
 * Author: Pankaj Dubey <pankaj.dubey@samsung.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __DWC_ETH_QOS__REGACC__H__
#define __DWC_ETH_QOS__REGACC__H__

#ifndef BIT
#define BIT(n)	(1 << (n))
#endif

#define dwceqos_readl(dev, reg)\
	__raw_readl(((void __iomem *)((dev)->base_addr)) + (reg))
#define dwceqos_writel(dev, reg, val)\
	__raw_writel((val), ((void __iomem *)((dev)->base_addr)) + (reg))

#define MAKE_MASK_32(e, s)				\
	(((e) - (s)) == 31 ? 0xffffffffUL :		\
	((1UL << ((e) - (s) + 1)) - 1))

#define MAKE_MASK_64(e, s)				\
	(((e) - (s)) == 63 ? 0xffffffffffffffffULL :	\
	((1ULL << ((e) - (s) + 1)) - 1))

#define GET_BITS(e, s, reg, data)			\
	(data = ((e) - (s) > 31) ?			\
	(((reg) >> (s)) & MAKE_MASK_64(e, s)) :		\
	(((reg) >> (s)) & MAKE_MASK_32(e, s)))

#define SET_BITS(e, s, reg, val) do {			\
	if ((e) - (s) > 31) {				\
		reg = ((((val) << (s)) &		\
		(MAKE_MASK_64((e), (s)) << (s))) |	\
		((reg) &				\
		(~(MAKE_MASK_64((e), (s)) << (s)))));	\
	} else {					\
		reg = ((((val) << (s)) &		\
		(MAKE_MASK_32((e), (s)) << (s))) |	\
		((reg) &				\
		(~(MAKE_MASK_32((e), (s)) << (s)))));	\
	}						\
} while (0)

#ifndef __DWC_ETH_QOS_H
#define __DWC_ETH_QOS_H

#ifdef __cplusplus
extern "C" {
#endif

	/* Following are the offsets of various address banks*/
	enum DWCEQOS_MAC_OFFSET {
		DWCEQOS_MAC_CFG			= (0x00),
		DWCEQOS_MAC_EXT_CFG		= (0x04),
		DWCEQOS_MAC_PKT_FILT		= (0x08),
		DWCEQOS_MAC_WD_TIMEOUT		= (0x0c),
		DWCEQOS_MAC_HT_REG0		= (0x10),
		DWCEQOS_MAC_HT_REG1		= (0x14),
		DWCEQOS_MAC_HT_REG2		= (0x18),
		DWCEQOS_MAC_HT_REG3		= (0x1c),
		DWCEQOS_MAC_HT_REG4		= (0x20),
		DWCEQOS_MAC_HT_REG5		= (0x24),
		DWCEQOS_MAC_HT_REG6		= (0x28),
		DWCEQOS_MAC_HT_REG7		= (0x2c),
		DWCEQOS_MAC_VLAN_TAG_CTRL	= (0x50),
		DWCEQOS_MAC_VLAN_TAG_FILTER	= (0x54),
		DWCEQOS_MAC_VLAN_HT		= (0x58),
		DWCEQOS_MAC_VLAN_INCL		= (0x60),
		DWCEQOS_MAC_INNER_VLAN_INCL	= (0x64),
		DWCEQOS_MAC_RX_FLOW_CTRL	= (0x90),
		DWCEQOS_MAC_RQ_CTRL4		= (0x94),
		DWCEQOS_MAC_TQPM0		= (0x98),
		DWCEQOS_MAC_TQPM1		= (0x9c),
		DWCEQOS_MAC_RQ_CTRL0		= (0xa0),
		DWCEQOS_MAC_RQ_CTRL1		= (0xa4),
		DWCEQOS_MAC_RQ_CTRL2		= (0xa8),
		DWCEQOS_MAC_RQ_CTRL3		= (0xac),
		DWCEQOS_MAC_INTR_STAT		= (0xb0),
		DWCEQOS_MAC_INTR_EN		= (0xb4),
		DWCEQOS_MAC_RX_TX_STAT		= (0xb8),
		DWCEQOS_MAC_PMT_CS		= (0xc0),
		DWCEQOS_MAC_RWK_PKT_FILT	= (0xc4),
		DWCEQOS_MAC_LPI_CS		= (0xd0),
		DWCEQOS_MAC_LPI_TIMERS_CTRL	= (0xd4),
		DWCEQOS_MAC_LPI_ENTRY_TIMER	= (0xd8),
		DWCEQOS_MAC_1US_TIC_CNTR	= (0xdc),
		DWCEQOS_MAC_AN_CTRL		= (0xe0),
		DWCEQOS_MAC_AN_STAT		= (0xe4),
		DWCEQOS_MAC_AN_ADVERTISEMENT	= (0xe8),
		DWCEQOS_MAC_AN_LPA		= (0xec),
		DWCEQOS_MAC_AN_EXPANSION	= (0xf0),
		DWCEQOS_MAC_TBI_EXTENDED_STAT	= (0xf4),
		DWCEQOS_MAC_PHYIF_CS		= (0xf8),
		DWCEQOS_MAC_VERSION		= (0x110),
		DWCEQOS_MAC_DBG			= (0x114),
		DWCEQOS_MAC_HW_FEATURE0		= (0x11c),
		DWCEQOS_MAC_HW_FEATURE1		= (0x120),
		DWCEQOS_MAC_HW_FEATURE2		= (0x124),
		DWCEQOS_MAC_HW_FEATURE3		= (0x128),
		DWCEQOS_MAC_MDIO_ADDR		= (0x200),
		DWCEQOS_MAC_MDIO_DATA		= (0x204),
		DWCEQOS_MAC_GPIO_CTRL		= (0x208),
		DWCEQOS_MAC_GPIO_STAT		= (0x20c),
		DWCEQOS_MAC_ARP_ADDR		= (0x210),
		DWCEQOS_MAC_CSR_SW_CTRL		= (0x230),
		DWCEQOS_MMC_CTRL		= (0x700),
		DWCEQOS_MMC_RX_INTR		= (0x704),
		DWCEQOS_MMC_TX_INTR		= (0x708),
		DWCEQOS_MMC_RX_INTR_MASK	= (0x70c),
		DWCEQOS_MMC_TX_INTR_MASK	= (0x710),
		DWCEQOS_TX_OCTET_CNT_GOOD_BAD	= (0x714),
		DWCEQOS_TX_PKT_CNT_GOOD_BAD	= (0x718),
		DWCEQOS_TX_BDT_PKTS_GOOD	= (0x71c),
		DWCEQOS_TX_MLT_PKTS_GOOD	= (0x720),
		DWCEQOS_TX_64_OCTS_PKTS_GB	= (0x724),
		DWCEQOS_TX_65_127_OCTS_PKTS_GB	= (0x728),
		DWCEQOS_TX_128_255_OCTS_PKTS_GB	= (0x72c),
		DWCEQOS_TX_256_511_OCTS_PKTS_GB	= (0x730),
		DWCEQOS_TX_512_1023_OCTS_PKTS_GB = (0x734),
		DWCEQOS_TX_1024_MAX_OCTS_PKTS_GB = (0x738),
		DWCEQOS_TX_UCT_PKTS_GOOD_BAD	= (0x73c),
		DWCEQOS_TX_MLT_PKTS_GOOD_BAD	= (0x740),
		DWCEQOS_TX_BDT_PKTS_GOOD_BAD	= (0x744),
		DWCEQOS_TX_UFLOW_ERR_PKTS	= (0x748),
		DWCEQOS_TX_SGL_COLLSN_GOOD_PKTS	= (0x74C),
		DWCEQOS_TX_MUL_COLLSN_GOOD_PKTS = (0x750),
		DWCEQOS_TX_DEF_PKTS		= (0x754),
		DWCEQOS_TX_LATE_COLLSN_PKTS	= (0x758),
		DWCEQOS_TX_EXCESS_COLLSN_PKTS	= (0x75c),
		DWCEQOS_TX_CARRIER_ERR_PKTS	= (0x760),
		DWCEWOS_TX_OCT_CNT_GOOD		= (0x764),
		DWCEQOS_TX_PKT_CNT_GOOD		= (0x768),
		DWCEQOS_TX_EXCESS_DEF_ERR	= (0x76c),
		DWCEQOS_TX_PAUSE_PKTS		= (0x770),
		DWCEQOS_TX_VLAN_PKTS_GOOD	= (0x774),
		DWCEQOS_TX_OSIZE_PKTS_GOOD	= (0x778),
		DWCEQOS_RX_PKTS_CNT_GOOD_BAD	= (0x780),
		DWCEQOS_RX_OCTET_CNT_GOOD_BAD	= (0x784),
		DWCEWOS_RX_OCT_CNT_GOOD		= (0x788),
		DWCEQOS_RX_BDT_PKTS_GOOD	= (0x78c),
		DWCEQOS_RX_MLT_PKTS_GOOD	= (0x790),
		DWCEQOS_RX_CRC_ERR_PKTS		= (0x794),
		DWCEQOS_RX_ALGMNT_ERR_PKTS	= (0x798),
		DWCEQOS_RX_RUNT_ERR_PKTS	= (0x79c),
		DWCEQOS_RX_JABBER_ERR_PKTS	= (0x7a0),
		DWCEQOS_RX_USIZE_PKTS_GOOD	= (0x7a4),
		DWCEQOS_RX_OSIZE_PKTS_GOOD	= (0x7a8),
		DWCEQOS_RX_64_OCTS_PKTS_GB	= (0x7ac),
		DWCEQOS_RX_65_127_OCTS_PKTS_GB	= (0x7b0),
		DWCEQOS_RX_128_255_OCTS_PKTS_GB	= (0x7b4),
		DWCEQOS_RX_256_511_OCTS_PKTS_GB	= (0x7b8),
		DWCEQOS_RX_512_1023_OCTS_PKTS_GB = (0x7bc),
		DWCEQOS_RX_1024_MAX_OCTS_PKTS_GB = (0x7c0),
		DWCEQOS_RX_UCT_PKTS_GOOD	= (0x7c4),
		DWCEQOS_RX_LEN_ERR_PKTS		= (0x7c8),
		DWCEQOS_RX_OUT_OF_RNG_TYPE_PKTS = (0x7cc),
		DWCEQOS_RX_PAUSE_PKTS		= (0x7d0),
		DWCEQOS_RX_FIFO_OFLOW_PKTS	= (0x7d4),
		DWCEQOS_RX_VLAN_PKTS_GOOD_BAD	= (0x7d8),
		DWCEQOS_RX_WDOG_ERR_PKTS	= (0x7dc),
		DWCEQOS_RX_RECEIVE_ERR_PKTS	= (0x7e0),
		DWCEQOS_RX_CTRL_PKTS_GOOD	= (0x7e4),
		DWCEQOS_TX_LPI_USEC_CNTR	= (0X7ec),
		DWCEQOS_TX_LPI_TRAN_CNTR	= (0x7f0),
		DWCEQOS_RX_LPI_USEC_CNTR	= (0x7f4),
		DWCEQOS_RX_LPI_TRAN_CNTR	= (0x7f8),
		DWCEQOS_MMC_IPC_RX_INTR_MASK	= (0x800),
		DWCEQOS_MMC_IPC_RX_INTR		= (0x808),
		DWCEQOS_RXIPV4_GOOD_PKTS	= (0x810),
		DWCEQOS_RXIPV4_HDR_ERR_PKTS	= (0x814),
		DWCEQOS_RXIPV4_NO_PAYLOAD_PKTS	= (0x818),
		DWCEQOS_RXIPV4_FRAGMENTED_PKTS	= (0x81c),
		DWCEQOS_RXIPV4_UDP_CKSM_DSBLD_PKT = (0x820),
		DWCEQOS_RXIPV6_GOOD_PKTS	= (0x824),
		DWCEQOS_RXIPV6_HDR_ERR_PKTS	= (0x828),
		DWCEQOS_RXIPV6_NO_PAYLOAD_PKTS	= (0x82c),
		DWCEQOS_RXUDP_GOOD_PKTS		= (0x830),
		DWCEQOS_RXUDP_ERR_PKT		= (0x834),
		DWCEQOS_RXTCP_GOOD_PKTS		= (0x838),
		DWCEQOS_RXTCP_ERR_PKTS		= (0x83c),
		DWCEQOS_RXICMP_GOOD_PKTS	= (0x840),
		DWCEQOS_RXICMP_ERR_PKTS		= (0x844),
		DWCEQOS_RXIPV4_GOOD_OCTS	= (0x850),
		DWCEQOS_RXIPV4_HDR_ERR_OCTS	= (0x854),
		DWCEQOS_RXIPV4_NO_PAYLOAD_OCTS	= (0x858),
		DWCEQOS_RXIPV4_FRAGMENTED_OCTS	= (0x85c),
		DWCEQOS_RXIPV4_UDP_CKSM_DSBL_OCTS = (0x860),
		DWCEQOS_RXIPV6_GOOD_OCTS	= (0x864),
		DWCEQOS_RXIPV6_HDR_ERR_OCTS	= (0x868),
		DWCEQOS_RXIPV6_NO_PAYLOAD_OCTS	= (0x86c),
		DWCEQOS_RXUDP_GOOD_OCTS		= (0x870),
		DWCEQOS_RXUDP_ERR_OCTS		= (0x874),
		DWCEQOS_RXTCP_GOOD_OCTS		= (0x878),
		DWCEQOS_RXTCP_ERR_OCTS		= (0x87c),
		DWCEQOS_RXICMP_GOOD_OCTS	= (0x880),
		DWCEQOS_RXICMP_ERR_OCTS		= (0x884),
		DWCEQOS_MAC_TS_CTRL		= (0xb00),
		DWCEQOS_MAC_SUB_SEC_INC		= (0xb04),
		DWCEQOS_MAC_SYS_TIME_SEC	= (0xb08),
		DWCEQOS_MAC_SYS_TIME_NSEC	= (0xb0c),
		DWCEQOS_MAC_SYS_TIME_SEC_UPD	= (0xb10),
		DWCEQOS_MAC_SYS_TIME_NSEC_UPD	= (0xb14),
		DWCEQOS_MAC_TS_ADDEND		= (0xb18),
		DWCEQOS_MAC_SYS_TIME_H_WORD_SEC	= (0xb1c),
		DWCEQOS_MAC_TS_STAT		= (0xb20),
		DWCEQOS_MAC_TX_TS_STAT_NSEC	= (0xb30),
		DWCEQOS_MAC_TX_TS_STAT_SEC	= (0xb34),
		DWCEQOS_MAC_AUX_CTRL		= (0xb40),
		DWCEQOS_MAC_AUX_TS_NSEC		= (0xb48),
		DWCEQOS_MAC_AUX_TS_SEC		= (0xb4c),
		DWCEQOS_MAC_TS_ING_ASYM_CORR	= (0xb50),
		DWCEQOS_MAC_TS_EG_ASYM_CORR	= (0xb54),
		DWCEQOS_MAC_TS_ING_CORR_NSEC	= (0xb58),
		DWCEQOS_MAC_TS_EG_CORR_NSEC	= (0xb5c),
		DWCEQOS_MAC_TS_ING_CORR_SUBNSEC = (0xb60),
		DWCEQOS_MAC_TS_EG_CORR_SUBNSEC	= (0xb64),
		DWCEQOS_MAC_PPS_CTRL		= (0xb70),
		DWCEQOS_MAC_PTO_CTRL		= (0xbc0),
		DWCEQOS_MAC_SRC_PORT_ID0	= (0xbc4),
		DWCEQOS_MAC_SRC_PORT_ID1	= (0xbc8),
		DWCEQOS_MAC_SRC_PORT_ID2	= (0xbcc),
		DWCEQOS_MAC_LOG_MSG_INTVL	= (0xbd0),
	};

#define DWCEQOS_MAC_Q_TX_FLOW_CTRL(n)	(0x70 + (4 * (n)))
#define DWCEQOS_MAC_ADDR_HIGH(n)	(0x300 + (8 * (n)))
#define DWCEQOS_MAC_ADDR_LOW(n)		(0x304 + (8 * (n)))

#define DWCEQOS_MAC_L3L4_CTRL(n)	(0x900 + (48 * (n)))
#define DWCEQOS_MAC_L4_ADDR(n)		(0x904 + (48 * (n)))
#define DWCEQOS_MAC_L3_ADDR0(n)		(0x910 + (48 * (n)))
#define DWCEQOS_MAC_L3_ADDR1(n)		(0x914 + (48 * (n)))
#define DWCEQOS_MAC_L3_ADDR2(n)		(0x918 + (48 * (n)))
#define DWCEQOS_MAC_L3_ADDR3(n)		(0x91c + (48 * (n)))

#define DWCEQOS_MAC_PPS_WIDTH(n)	(0xb8c + (16 * (n)))
#define DWCEQOS_MAC_PPS_INTERVAL(n)	(0xb88 + (16 * (n)))
#define DWCEQOS_MAC_PPS_TTNS(n)		(0xb84 + (16 * (n)))
#define DWCEQOS_MAC_PPS_TTS(n)		(0xb80 + (16 * (n)))

	enum DWCEQOS_MTL_OFFSET {
		DWCEQOS_MTL_OP_MODE		= (0xc00),
		DWCEQOS_MTL_DBG_CTL		= (0xc08),
		DWCEQOS_MTL_DBG_STS		= (0xc0c),
		DWCEQOS_MTL_FIFO_DBG_DATA	= (0xc10),
		DWCEQOS_MTL_INTR_STAT		= (0xc20),
		DWCEQOS_MTL_RQ_DMA_MAP0		= (0xc30),
		DWCEQOS_MTL_RQ_DMA_MAP1		= (0xc34),
	};

	enum DWCEQOS_MTL_Q0_OFFSET {
		DWCEQOS_MTL_TQ0_OP_MODE		= (0xd00),
		DWCEQOS_MTL_TQ0_UFLOW		= (0xd04),
		DWCEQOS_MTL_TQ0_DBG		= (0xd08),
		DWCEQOS_MTL_TQ0_ETS_STAT	= (0xd14),
		DWCEQOS_MTL_TQ0_QW		= (0xd18),
		DWCEQOS_MTL_Q0_ICS		= (0xd2c),
		DWCEQOS_MTL_RQ0_OP_MODE		= (0xd30),
		DWCEQOS_MTL_RQ0_MPOC		= (0xd34),
		DWCEQOS_MTL_RQ0_DBG		= (0xd38),
		DWCEQOS_MTL_RQ0_CTRL		= (0xd3c),
	};

	enum DWCEQOS_DMA_OFFSET {
		DWCEQOS_DMA_MODE		= (0x1000),
		DWCEQOS_DMA_SYSBUS_MODE		= (0x1004),
		DWCEQOS_DMA_INTR_STAT		= (0x1008),
		DWCEQOS_DMA_DBG_STAT0		= (0x100c),
		DWCEQOS_DMA_DBG_STAT1		= (0x1010),
		DWCEQOS_DMA_DBG_STAT2		= (0x1014),
		DWCEQOS_AXI4_TX_AR_ACE_CTRL	= (0x1020),
		DWCEQOS_AXI4_RX_AW_ACE_CTRL	= (0x1024),
		DWCEQOS_AXI4_TXRX_AWAR_ACE_CTRL	= (0x1028),
		DWCEQOS_AXI_LPI_ENTRY_INTVL	= (0x1040),
	};

	/* DWCEQOS_MTL_Q1 Register Offsets */
#define DWCEQOS_MTL_TQ_OP_MODE(n)	(0x0d00 + (64 * (n)))
#define DWCEQOS_MTL_TQ_UFLOW(n)		(0x0d04 + (64 * (n)))
#define DWCEQOS_MTL_TQ_DBG(n)		(0x0d08 + (64 * (n)))
#define DWCEQOS_MTL_TQ_ETS_CTRL(n)	(0x0d10 + (64 * (n)))
#define DWCEQOS_MTL_TQ_ETS_STAT(n)	(0x0d14 + (64 * (n)))
#define DWCEQOS_MTL_TQ_QW(n)		(0x0d18 + (64 * (n)))
#define DWCEQOS_MTL_TQ_SSC(n)		(0x0d1c + (64 * (n)))
#define DWCEQOS_MTL_TQ_HC(n)		(0x0d20 + (64 * (n)))
#define DWCEQOS_MTL_TQ_LC(n)		(0x0d24 + (64 * (n)))
#define DWCEQOS_MTL_Q_ICS(n)		(0x0d2c + (64 * (n)))
#define DWCEQOS_MTL_RQ_OP_MODE(n)	(0x0d30 + (64 * (n)))
#define DWCEQOS_MTL_RQ_MPOC(n)		(0x0d34 + (64 * (n)))
#define DWCEQOS_MTL_RQ_DBG(n)		(0x0d38 + (64 * (n)))
#define DWCEQOS_MTL_RQ_CTRL(n)		(0x0d3c + (64 * (n)))

	/* DWCEQOS_DMA_CH0 Register Offsets */
#define DWCEQOS_DMA_CH_CTRL(n)			(0x1100 + (128 * (n)))
#define DWCEQOS_DMA_CH_TX_CTRL(n)		(0x1104 + (128 * (n)))
#define DWCEQOS_DMA_CH_RX_CTRL(n)		(0x1108 + (128 * (n)))
#define DWCEQOS_DMA_CH_TXDESC_LIST_HADDR(n)	(0x1110 + (128 * (n)))
#define DWCEQOS_DMA_CH_TXDESC_LIST_ADDR(n)	(0x1114 + (128 * (n)))
#define DWCEQOS_DMA_CH_RXDESC_LIST_HADDR(n)	(0x1118 + (128 * (n)))
#define DWCEQOS_DMA_CH_RXDESC_LIST_ADDR(n)	(0x111c + (128 * (n)))
#define DWCEQOS_DMA_CH_TXDESC_TAIL_PTR(n)	(0x1120 + (128 * (n)))
#define DWCEQOS_DMA_CH_RXDESC_TAIL_PTR(n)	(0x1128 + (128 * (n)))
#define DWCEQOS_DMA_CH_TXDESC_RING_LEN(n)	(0x112c + (128 * (n)))
#define DWCEQOS_DMA_CH_RXDESC_RING_LEN(n)	(0x1130 + (128 * (n)))
#define DWCEQOS_DMA_CH_INTR_EN(n)		(0x1134 + (128 * (n)))
#define DWCEQOS_DMA_CH_RX_INTR_WD_TIMER(n)	(0x1138 + (128 * (n)))
#define DWCEQOS_DMA_CH_SLOT_FUNC_CS(n)		(0x113c + (128 * (n)))
#define DWCEQOS_DMA_CH_CUR_APP_TXDESC(n)	(0x1144 + (128 * (n)))
#define DWCEQOS_DMA_CH_CUR_APP_RXDESC(n)	(0x114c + (128 * (n)))
#define DWCEQOS_DMA_CH_CUR_APP_TXBUF_H(n)	(0x1150 + (128 * (n)))
#define DWCEQOS_DMA_CH_CUR_APP_TXBUF(n)		(0x1154 + (128 * (n)))
#define DWCEQOS_DMA_CH_CUR_APP_RXBUF_H(n)	(0x1158 + (128 * (n)))
#define DWCEQOS_DMA_CH_CUR_APP_RXBUF(n)		(0x115c + (128 * (n)))
#define DWCEQOS_DMA_CH_STAT(n)			(0x1160 + (128 * (n)))
#define DWCEQOS_DMA_CH_MISS_FRAME_CNT(n)	(0x116c + (128 * (n)))

	/* Following are bit-field details of SFR offsets */

	/* DWCEQOS_MAC_CFG: Offset: 0x0 */
#define DWCEQOS_MAC_CFG_ARPEN		BIT(31)
#define DWCEQOS_MAC_CFG_SARC(x)		(((x) & 0x7) << 28)
#define DWCEQOS_MAC_CFG_IPC		BIT(27)
#define DWCEQOS_MAC_CFG_GPSLCE		BIT(23)
#define DWCEQOS_MAC_CFG_CST		BIT(21)
#define DWCEQOS_MAC_CFG_ACS		BIT(20)
#define DWCEQOS_MAC_CFG_WD		BIT(19)
#define DWCEQOS_MAC_CFG_JD		BIT(17)
#define DWCEQOS_MAC_CFG_JE		BIT(16)
#define DWCEQOS_MAC_CFG_PS		BIT(15)
#define DWCEQOS_MAC_CFG_FES		BIT(14)
#define DWCEQOS_MAC_CFG_LM		BIT(12)
#define DWCEQOS_MAC_CFG_DM		BIT(13)
#define DWCEQOS_MAC_CFG_DO		BIT(10)
#define DWCEQOS_MAC_CFG_TE		BIT(1)
#define DWCEQOS_MAC_CFG_RE		BIT(0)

	/* DWCEQOS_MAC_EXT_CFG: Offset: 0x4 */
#define DWCEQOS_MAC_ECFG_HDSMS(x)	(((x) & 0x7) << 20)
#define DWCEQOS_MAC_ECFG_GPSL(x)	(((x) & 0x3fff) << 0)

	/* DWCEQOS_MAC_PKT_FILT: Offset: 0x8 */
#define DWCEQOS_MAC_PKT_FILT_RA		BIT(31)
#define DWCEQOS_MAC_PKT_FILT_IPFE	BIT(20)
#define DWCEQOS_MAC_PKT_FILT_VTFE	BIT(16)
#define DWCEQOS_MAC_PKT_FILT_HPF	BIT(10)
#define DWCEQOS_MAC_PKT_FILT_SAF	BIT(9)
#define DWCEQOS_MAC_PKT_FILT_SAIF	BIT(8)
#define DWCEQOS_MAC_PKT_FILT_PCF(x)	(((x) & 0x3) << 6)
#define DWCEQOS_MAC_PKT_FILT_DBF	BIT(5)
#define DWCEQOS_MAC_PKT_FILT_PM		BIT(4)
#define DWCEQOS_MAC_PKT_FILT_DAIF	BIT(3)
#define DWCEQOS_MAC_PKT_FILT_HMC	BIT(2)
#define DWCEQOS_MAC_PKT_FILT_HUC	BIT(1)
#define DWCEQOS_MAC_PKT_FILT_PR		BIT(0)

	/* MAC_VLAN_TAG_CTRL: Offset: 0x50 */
#define DWCEQOS_MAC_VLAN_TAG_CTRL_EVLS(x)	(((x) & 0x3) << 21)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_EIVLS(x)	(((x) & 0x3) << 28)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_ERIVLT	BIT(27)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_EDVLP		BIT(26)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_VTHM		BIT(25)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_EVLRXS	BIT(24)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_DOVLTC	BIT(20)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_ESVL		BIT(18)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_VTIM		BIT(17)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_ETV		BIT(16)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_OFS(x)	(((x) & 0x1f) << 2)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_CT		BIT(1)
#define DWCEQOS_MAC_VLAN_TAG_CTRL_OB		BIT(0)

	/* MAC_VLAN_TAG_FILTER: Offset: 0x54 */
#define DWCEQOS_MAC_VLAN_TAG_FILTER_ERIVLT	BIT(20)
#define DWCEQOS_MAC_VLAN_TAG_FILTER_ERSVLM	BIT(19)
#define DWCEQOS_MAC_VLAN_TAG_FILTER_DOVLTC	BIT(18)
#define DWCEQOS_MAC_VLAN_TAG_FILTER_ETV		BIT(17)
#define DWCEQOS_MAC_VLAN_TAG_FILTER_VEN		BIT(16)
#define DWCEQOS_MAC_VLAN_TAG_FILTER_VID(x)	(((x) & 0xffff) << 0)

	/* MAC_VLAN_HT: 0x58 */
#define DWCEQOS_MAC_VLAN_HT_VLHT(x)		(((x) & 0xffff) << 0)

	/* MAC_VLAN_INCL: Offset: 0x60 */
#define DWCEQOS_MAC_VLAN_INCL_VLTI	BIT(20)
#define DWCEQOS_MAC_VLAN_INCL_CSVL	BIT(19)
#define DWCEQOS_MAC_VLAN_INCL_VLP	BIT(18)
#define DWCEQOS_MAC_VLAN_INCL_VLC(x)	(((x) & 0x3) << 16)
#define DWCEQOS_MAC_VLAN_INCL_VLT(x)	(((x) & 0xffff) << 0)

	/* MAC_INNER_VLAN_INCL: Offset: 0x64 */
#define DWCEQOS_MAC_IVLAN_INCL_VLTI	BIT(20)
#define DWCEQOS_MAC_IVLAN_INCL_CSVL	BIT(19)
#define DWCEQOS_MAC_IVLAN_INCL_VLP	BIT(18)
#define DWCEQOS_MAC_IVLAN_INCL_VLC(x)	(((x) & 0x3) << 16)
#define DWCEQOS_MAC_IVLAN_INCL_VLT(x)	(((x) & 0xffff) << 0)

	/* DWCEQOS_MAC_Q(i)_TX_FLOW_CTRL: Offset: (0x70 + 4 * i) */
#define DWCEQOS_MAX_TX_CTRL_PT(n)	(((n) & 0xffff) << 16)
#define DWCEQOS_MAC_TX_CTRL_TFE		BIT(1)

	/* DWCEQOS_MAC_Q_RX_FLOW_CTRL: Offset: 0x90 */
#define DWCEQOS_MAC_RX_CTRL_RFE		BIT(0)
#define DWCEQOS_MAC_RX_CTRL_PFCE	BIT(8)

	/* DWCEQOS_MAC_TQPM0: Offset: 0x98 */
#define DWCEQOS_MAC_TQPM0_PSTQ(n, v)	(((v) & 0xff) << ((n) * 8))

	/* DWCEQOS_MAC_TQPM1: Offset: 0x9c */
#define DWCEQOS_MAC_TQPM1_PSTQ(n, v)	(((v) & 0xff) << ((n) * 8))

	/* DWCEQOS_MAC_RQ_CTRL0: Offset: 0xa0  */
#define DWCEQOS_MAC_RQ_CTRL0_RQEN(n, v)	(((v) & 0x3) << ((n) * 2))

	/* DWCEQOS_MAC_RQ_CTRL2: Offset: 0xa8 */
#define DWCEQOS_MAC_RQ_CTRL2_PSRQ(n, v)	(((v) & 0xff) << ((n) * 8))

	/* DWCEQOS_MAC_RQ_CTRL3: Offset: 0xac */
#define DWCEQOS_MAC_RQ_CTRL3_PSRQ(n, v)	(((v) & 0xff) << ((n) * 8))

	/* MAC_INTR_STAT: Offset: 0xb0 */
#define DWCEQOS_MAC_IS_LPI_INT		BIT(5)
#define DWCEQOS_MAC_IS_MMC_INT		BIT(8)

#define DWCEQOS_MAC_RQ_EN		BIT(1)
#define DWCEQOS_MAC_MAC_ADDR_HI_EN	BIT(31)

	/* DWCEQOS_MAC_INTR_EN: Offset: 0xb4 */
#define DWCEQOS_MAC_INTR_EN_RXSTSIE	BIT(14)
#define DWCEQOS_MAC_INTR_EN_TXSTSIE	BIT(13)
#define DWCEQOS_MAC_INTR_EN_LPIIE	BIT(5)
#define DWCEQOS_MAC_INTR_EN_PMTIE	BIT(4)
#define DWCEQOS_MAC_INTR_EN_PHYIE	BIT(3)
#define DWCEQOS_MAC_INTR_EN_PCSANCIE	BIT(2)
#define DWCEQOS_MAC_INTR_EN_PCSLCHGIE	BIT(1)
#define DWCEQOS_MAC_INTR_EN_RGSMIIIE	BIT(0)

	/* DWCEQOS_MAC_PMT_CS: Offset: 0xc0 */
#define DWCEQOS_MAC_PMT_CS_PWRDWN	BIT(0)
#define DWCEQOS_MAC_PMT_CS_MGKPKTEN	BIT(1)
#define DWCEQOS_MAC_PMT_CS_RWKPKTEN	BIT(2)
#define DWCEQOS_MAC_PMT_CS_RWKFILTRST	BIT(31)

	/* DWCEQOS_MAC_LPI_CS: Offset: 0xd0 */
#define DWCEQOS_MAC_LPI_CS_LPIEN	BIT(16)
#define DWCEQOS_MAC_LPI_CS_LPITXA	BIT(19)
#define DWCEQOS_MAC_LPI_CS_PLS		BIT(17)

	/* DWCEQOS_MAC_LPI_TIMERS_CTRL: Offset: 0xd4 */
#define DWCEQOS_MAC_LPI_TIMERS_CTRL_LST(n)	(((n) & 0x3ff) << 16)
#define DWCEQOS_MAC_LPI_TIMERS_CTRL_TWT(n)	(((n) & 0xffff) << 0)

	/* DWCEQOS_MAC_AN_CTRL: Offset: 0xe0 */
#define DWCEQOS_MAC_AN_CTRL_ANE		BIT(12)
#define DWCEQOS_MAC_AN_CTRL_RAN		BIT(9)

	/* DWCEQOS_MAC_MDIO_ADDR: Offset: 0x200*/
#define DWCEQOS_MAC_MDIO_ADDR_PSE	BIT(27)
#define DWCEQOS_MAC_MDIO_ADDR_BTB	BIT(26)
#define DWCEQOS_MAC_MDIO_ADDR_PA(n)	(((n) & 0x1f) << 21)
#define DWCEQOS_MAC_MDIO_ADDR_RDA(n)	(((n) & 0x1f) << 16)
#define DWCEQOS_MAC_MDIO_ADDR_NTC(n)	(((n) & 0x7) << 12)
#define DWCEQOS_MAC_MDIO_ADDR_CR(n)	(((n) & 0xf) << 8)
#define DWCEQOS_MAC_MDIO_ADDR_GOC_1	BIT(3)
#define DWCEQOS_MAC_MDIO_ADDR_GOC_0	BIT(2)
#define DWCEQOS_MAC_MDIO_ADDR_GB	BIT(0)

	/* DWCEQOS_MAC_MDIO_DATA: Offset: 0x204*/
#define DWCEQOS_MAC_MDIO_DATA_GD(n)	(((n) & 0xffff) << 0)

	/* DWCEQOS_MAC_ADDR_HIGH: Offset: (0x300 + 8 * n) */
#define DWCEQOS_MAC_ADDR_HIGH_ADDRHI(v)	(((v) & 0xffff) << 0)
#define DWCEQOS_MAC_ADDR_HIGH_AE	BIT(31)

	/* DWCEQOS_MAC_L3L4_CTRL: Offset: 0x900 */
#define DWCEQOS_MAC_L3L4_CR_DMCCH0(n)	(((n) & 0xFF) << 24)
#define DWCEQOS_MAC_L3L4_CR_L4DPIM0	BIT(21)
#define DWCEQOS_MAC_L3L4_CR_L4DPM0	BIT(20)
#define DWCEQOS_MAC_L3L4_CR_L4SPIM0	BIT(19)
#define DWCEQOS_MAC_L3L4_CR_L4SPM0	BIT(18)
#define DWCEQOS_MAC_L3L4_CR_L4PEN0	BIT(16)
#define DWCEQOS_MAC_L3L4_CR_L3HDBM0	(0x1F << 11)
#define DWCEQOS_MAC_L3L4_CR_L3HSBM0	(0x1F << 6)
#define DWCEQOS_MAC_L3L4_CR_L3DAIM0	BIT(5)
#define DWCEQOS_MAC_L3L4_CR_L3DAM0	BIT(4)
#define DWCEQOS_MAC_L3L4_CR_L3SAIM0	BIT(3)
#define DWCEQOS_MAC_L3L4_CR_L3SAM0	BIT(2)
#define DWCEQOS_MAC_L3L4_CR_L3PEN0	BIT(0)

	/* DWCEQOS_MAC_L4_ADDR: Offset: 0x904 */
#define DWCEQOS_MAC_L4_AR_L4SP0(x)	((x) << 0)
#define DWCEQOS_MAC_L4_AR_L4DP0(x)	((x) << 16)

	/* DWCEQOS_MAC_TS_CTRL: Offset: 0xb00 */
#define DWCEQOS_MAC_TS_CTRL_TSENMACADDR	BIT(18)
#define DWCEQOS_MAC_TS_CTRL_TSADDREG	BIT(5)
#define DWCEQOS_MAC_TS_CTRL_TSTRIG	BIT(4)
#define DWCEQOS_MAC_TS_CTRL_TSUPDT	BIT(3)
#define DWCEQOS_MAC_TS_CTRL_TSINIT	BIT(2)

	/* DWCEQOS_MAC_SUB_SEC_INC: Offset: 0xb04 */
#define DWCEQOS_MAC_SUB_SEC_INC_SSINC(n)	(((n) & 0xff) << 16)

	/* DWCEQOS_MAC_SYS_TIME_NSEC_UPD: Offset: 0xb14 */
#define DWCEQOS_MAC_SYS_TIME_NSEC_UPD_ADDSUB	BIT(31)
#define DWCEQOS_MAC_SYS_TIME_NSEC_UPD_TSSS(n)	(((n) & 0x7fffffff) << 0)

	/* DWCEQOS_MMC_CTRL: Offset: 0x700 */
#define DWCEQOS_MMC_CTRL_CNTPRSTLVL	BIT(5)
#define DWCEQOS_MMC_CTRL_CNTPRST	BIT(4)
#define DWCEQOS_MMC_CTRL_CNTFREEZ	BIT(3)
#define DWCEQOS_MMC_CTRL_RSTONRD	BIT(2)
#define DWCEQOS_MMC_CTRL_CNTSTOPRO	BIT(1)
#define DWCEQOS_MMC_CTRL_CNTRST		BIT(0)

	/* DWCEQOS_MTL_OP_MODE: Offset: 0xc00 */
#define DWCEQOS_MTL_OP_MODE_DTXSTS	BIT(1)
#define DWCEQOS_MTL_OP_MODE_SCHALG(v)	(((v) & 0x3) << 5)

	/* DWCEQOS_MTL_TQ_OP_MODE: Offset: (0xd00 + 64 * n)*/
#define DWCEQOS_MTL_TQOM_TQS(v)		(((v) & 0x3ff) << 16)
#define DWCEQOS_MTL_TQOM_TTC(v)		(((v) & 0x7) << 4)
#define DWCEQOS_MTL_TQOM_QEN(v)		(((v) & 0x3) << 2)
#define DWCEQOS_MTL_TQOM_TSF		BIT(1)
#define DWCEQOS_MTL_TQOM_FTQ		BIT(0)

	/* DWCEQOS_MTL_TQ_ETS_CTRL: Offset: (0xd10 + 64 * n) */
#define DWCEQOS_MTL_QECR_ABPSSIE	BIT(24)
#define DWCEQOS_MTL_QECR_SLC(v)		(((v) & 0x7) << 4)
#define DWCEQOS_MTL_QECR_CC		BIT(3)
#define DWCEQOS_MTL_QECR_AVALG		BIT(2)

	/* DWCEQOS_MTL_TQ0_QW: Offset: (0xd18 + 64 *n) */
#define DWCEQOS_MTL_TQQW_ISCQW(v)	(((v) & 0x1fffff) << 0)

	/* DWCEQOS_MTL_RQ_OM: Offset: (0xd30 + 64 *n) */
#define DWCEQOS_MTL_RQOM_RQS(v)		(((v) & 0x3ff) << 20)
#define DWCEQOS_MTL_RQOM_RFD(v)		(((v) & 0x3f) << 14)
#define DWCEQOS_MTL_RQOM_RFA(v)		(((v) & 0x3f) << 8)
#define DWCEQOS_MTL_RQOM_EHFC		BIT(7)
#define DWCEQOS_MTL_RQOM_RSF		BIT(5)
#define DWCEQOS_MTL_RQOM_FEP		BIT(4)
#define DWCEQOS_MTL_RQOM_RTC(v)		(((v) & 0x3) << 0)

	/* DWCEQOS_DMA_MODE: Offset: 0x1000 */
#define DWCEQOS_DMA_MODE_PR(v)		(((v) & 0x7) << 12)
#define DWCEQOS_DMA_MODE_TXPR		BIT(11)
#define DWCEQOS_DMA_MODE_TAA(v)		(((v) & 0x7) << 2)
#define DWCEQOS_DMA_MODE_DA		BIT(1)
#define DWCEQOS_DMA_MODE_SWR		BIT(0)

	/* DWCEQOS_DMA_SYSBUS_MODE: Offset: 0x1004 */
#define DWCEQOS_DMA_SBM_EAME		BIT(11)
#define DWCEQOS_DMA_SBM_WR_OSR_LMT(v)	(((v) & 0xf) << 21)
#define DWCEQOS_DMA_SBM_RD_OSR_LMT(v)	(((v) & 0xf) << 16)
#define DWCEQOS_DMA_SBM_BLEN32		BIT(4)
#define DWCEQOS_DMA_SBM_BLEN16		BIT(3)
#define DWCEQOS_DMA_SBM_BLEN8		BIT(2)
#define DWCEQOS_DMA_SBM_BLEN4		BIT(1)
#define DWCEQOS_DMA_SBM_FB		BIT(0)

	/* DWCEQOS_DMA_CH_CTRL: Offset: 0x1100 */
#define DWCEQOS_DMA_CH_CTRL_SPH		BIT(24)
#define DWCEQOS_DMA_CH_CTRL_PBLX8	BIT(16)
#define DWCEQOS_DMA_CH_CTRL_MSS(v)	(((v) & 0xffff) << 0)

	/* DWCEQOS_DMA_CH_TX_CTRL: Offset: 0x1104 */
#define DWCEQOS_DMA_CH_TC_TXPBL(v)	(((v) & 0x3f) << 16)
#define DWCEQOS_DMA_CH_TC_TSE		BIT(12)
#define DWCEQOS_DMA_CH_TC_OSP		BIT(4)
#define DWCEQOS_DMA_CH_TC_TCW(v)	(((v) & 0x7) << 1)
#define DWCEQOS_DMA_CH_TC_ST		BIT(0)

	/* DWCEQOS_DMA_CH_RX_CTRL: Offset: 0x1108 */
#define DWCEQOS_DMA_CH_RC_RXPBL(v)	(((v) & 0x3f) << 16)
#define DWCEQOS_DMA_CH_RC_RBSZ(v)	(((v) & 0x3fff) << 1)
#define DWCEQOS_DMA_CH_RC_SR		BIT(0)

	/* DWCEQOS_DMA_CH_INTR_EN: Offset: 0x1134 */
#define DWCEQOS_DMA_CH_IE_TIE		BIT(0)
#define DWCEQOS_DMA_CH_IE_TXSE		BIT(1)
#define DWCEQOS_DMA_CH_IE_TBUE		BIT(2)
#define DWCEQOS_DMA_CH_IE_RIE		BIT(6)
#define DWCEQOS_DMA_CH_IE_RBUE		BIT(7)
#define DWCEQOS_DMA_CH_IE_RSE		BIT(8)
#define DWCEQOS_DMA_CH_IE_FBEE		BIT(12)
#define DWCEQOS_DMA_CH_IE_AIE		BIT(14)
#define DWCEQOS_DMA_CH_IE_NIE		BIT(15)

	/*DWCEQOS_DMA_CH_RX_INTR_WD_TIMER: Offset: 0x1138*/
#define DWCEQOS_DMA_CH_RX_IWDT_RWT(v)	(((v) & 0xff) << 0)

	/* DWCEQOS_DMA_CH_SLOT_FUNC_CS: Offset: 0x113c */
#define DWCEQOS_DMA_CH_SFCS_ASC		BIT(1)
#define DWCEQOS_DMA_CH_SFCS_ESC		BIT(0)

	/* DWCEQOS_DMA_CH_STAT: Offset: 0x1160 */
#define DWCEQOS_DMA_CH_STAT_FBE		BIT(12)
#define DWCEQOS_DMA_CH_STAT_RPS		BIT(8)
#define DWCEQOS_DMA_CH_STAT_RBU		BIT(7)
#define DWCEQOS_DMA_CH_STAT_RI		BIT(6)
#define DWCEQOS_DMA_CH_STAT_TBU		BIT(2)
#define DWCEQOS_DMA_CH_STAT_TPS		BIT(1)
#define DWCEQOS_DMA_CH_STAT_TI		BIT(0)

	/* Various DWCEQOS SFR bit positions */
#define MAC_VLAN_HT_VLHT_LPOS	0
#define MAC_VLAN_HT_VLHT_HPOS	15
#ifdef __cplusplus
}
#endif
#endif //__DWC_ETH_QOS_H

/* virtual_registers Low Bit Macro Name's */
#define RX_CONTEXT_DESC_RDES3_OWN_LBIT_POS  0x1f
#define RX_CONTEXT_DESC_RDES3_CTXT_LBIT_POS  0x1e
#define TX_CONTEXT_DESC_TDES3_OWN_LBIT_POS  0x1f
#define TX_CONTEXT_DESC_TDES3_CTXT_LBIT_POS  0x1e
#define TX_CONTEXT_DESC_TDES3_TCMSSV_LBIT_POS  0x1a
#define TX_CONTEXT_DESC_TDES3_IVTIR_LBIT_POS  0x12
#define TX_CONTEXT_DESC_TDES3_IVLTV_LBIT_POS  0x11
#define TX_CONTEXT_DESC_TDES3_VLTV_LBIT_POS  0x10
#define TX_CONTEXT_DESC_TDES2_IVT_LBIT_POS  0x10
#define TX_CONTEXT_DESC_TDES3_VT_LBIT_POS  0
#define TX_CONTEXT_DESC_TDES2_MSS_LBIT_POS  0
#define RX_NORMAL_DESC_RDES3_OWN_LBIT_POS  0x1f
#define RX_NORMAL_DESC_RDES3_LD_LBIT_POS  0x1c
#define RX_NORMAL_DESC_RDES3_RS1V_LBIT_POS  0x1a
#define RX_NORMAL_DESC_RDES3_RS0V_LBIT_POS  0x19
#define RX_NORMAL_DESC_RDES3_CE_LBIT_POS  0x18
#define RX_NORMAL_DESC_RDES3_OE_LBIT_POS  0x15
#define RX_NORMAL_DESC_RDES3_RE_LBIT_POS  0x14
#define RX_NORMAL_DESC_RDES3_LT_LBIT_POS  0x10
#define RX_NORMAL_DESC_RDES3_ES_LBIT_POS  0xf
#define RX_NORMAL_DESC_RDES3_FL_LBIT_POS  0
#define RX_NORMAL_DESC_RDES1_TSA_LBIT_POS  0xe
#define RX_NORMAL_DESC_RDES1_IPPE_LBIT_POS  0x7
#define RX_NORMAL_DESC_RDES1_IPCB_LBIT_POS  0x6
#define RX_NORMAL_DESC_RDES1_IPHE_LBIT_POS  0x3
#define TX_NORMAL_DESC_TDES3_OWN_LBIT_POS  0x1f
#define TX_NORMAL_DESC_TDES3_CTXT_LBIT_POS  0x1e
#define TX_NORMAL_DESC_TDES3_FD_LBIT_POS  0x1d
#define TX_NORMAL_DESC_TDES3_LD_LBIT_POS  0x1c
#define TX_NORMAL_DESC_TDES3_CPC_LBIT_POS  0x1a
#define TX_NORMAL_DESC_TDES3_SAIC_LBIT_POS  0x17
#define TX_NORMAL_DESC_TDES3_SLOTNUM_TCPHDRLEN_LBIT_POS  0x13
#define TX_NORMAL_DESC_TDES3_TSE_LBIT_POS  0x12
#define TX_NORMAL_DESC_TDES3_CIC_LBIT_POS  0x10
#define TX_NORMAL_DESC_TDES3_FL_LBIT_POS  0
#define TX_NORMAL_DESC_TDES2_IC_LBIT_POS  0x1f
#define TX_NORMAL_DESC_TDES2_TTSE_LBIT_POS  0x1e
#define TX_NORMAL_DESC_TDES2_B2L_LBIT_POS  0x10
#define TX_NORMAL_DESC_TDES2_VTIR_LBIT_POS  0xe
#define TX_NORMAL_DESC_TDES2_HL_B1L_LBIT_POS  0
#define RX_ERROR_COUNTERS_RX_ERRORS_FRAME_ERROR_LBIT_POS  0x3
#define RX_ERROR_COUNTERS_RX_ERRORS_CRC_ERROR_LBIT_POS  0x2
#define RX_ERROR_COUNTERS_RX_ERRORS_OVERRUN_ERROR_LBIT_POS  0x1
#define RX_PKT_FEATURES_VLAN_TAG_VT_LBIT_POS  0
#define RX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_LBIT_POS  0x1
#define RX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_DONE_LBIT_POS  0
#define TX_PKT_FEATURES_MSS_MSS_LBIT_POS  0
#define TX_PKT_FEATURES_VLAN_TAG_VT_LBIT_POS  0
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_LBIT_POS  0x3
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_LBIT_POS  0x2
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_LBIT_POS  0x1
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_LBIT_POS  0

/* virtual_registers High Bit Macro Name's */
#define RX_CONTEXT_DESC_RDES3_OWN_HBIT_POS  0x1f
#define RX_CONTEXT_DESC_RDES3_CTXT_HBIT_POS  0x1e
#define TX_CONTEXT_DESC_TDES3_OWN_HBIT_POS  0x1f
#define TX_CONTEXT_DESC_TDES3_CTXT_HBIT_POS  0x1e
#define TX_CONTEXT_DESC_TDES3_TCMSSV_HBIT_POS  0x1a
#define TX_CONTEXT_DESC_TDES3_IVTIR_HBIT_POS  0x13
#define TX_CONTEXT_DESC_TDES3_IVLTV_HBIT_POS  0x11
#define TX_CONTEXT_DESC_TDES3_VLTV_HBIT_POS  0x10
#define TX_CONTEXT_DESC_TDES3_VT_HBIT_POS  0xf
#define TX_CONTEXT_DESC_TDES2_IVT_HBIT_POS  0x1f
#define TX_CONTEXT_DESC_TDES2_MSS_HBIT_POS  0xe
#define RX_NORMAL_DESC_RDES3_OWN_HBIT_POS  0x1f
#define RX_NORMAL_DESC_RDES3_LD_HBIT_POS  0x1c
#define RX_NORMAL_DESC_RDES3_RS1V_HBIT_POS  0x1a
#define RX_NORMAL_DESC_RDES3_RS0V_HBIT_POS  0x19
#define RX_NORMAL_DESC_RDES3_CE_HBIT_POS  0x18
#define RX_NORMAL_DESC_RDES3_OE_HBIT_POS  0x15
#define RX_NORMAL_DESC_RDES3_RE_HBIT_POS  0x14
#define RX_NORMAL_DESC_RDES3_LT_HBIT_POS  0x12
#define RX_NORMAL_DESC_RDES3_ES_HBIT_POS  0xf
#define RX_NORMAL_DESC_RDES3_FL_HBIT_POS  0xe
#define RX_NORMAL_DESC_RDES1_TSA_HBIT_POS  0xe
#define RX_NORMAL_DESC_RDES1_IPPE_HBIT_POS  0x7
#define RX_NORMAL_DESC_RDES1_IPCB_HBIT_POS  0x6
#define RX_NORMAL_DESC_RDES1_IPHE_HBIT_POS  0x3
#define TX_NORMAL_DESC_TDES3_OWN_HBIT_POS  0x1f
#define TX_NORMAL_DESC_TDES3_CTXT_HBIT_POS  0x1e
#define TX_NORMAL_DESC_TDES3_FD_HBIT_POS  0x1d
#define TX_NORMAL_DESC_TDES3_LD_HBIT_POS  0x1c
#define TX_NORMAL_DESC_TDES3_CPC_HBIT_POS  0x1b
#define TX_NORMAL_DESC_TDES3_SAIC_HBIT_POS  0x19
#define TX_NORMAL_DESC_TDES3_SLOTNUM_TCPHDRLEN_HBIT_POS  0x16
#define TX_NORMAL_DESC_TDES3_TSE_HBIT_POS  0x12
#define TX_NORMAL_DESC_TDES3_CIC_HBIT_POS  0x11
#define TX_NORMAL_DESC_TDES3_FL_HBIT_POS  0xe
#define TX_NORMAL_DESC_TDES2_IC_HBIT_POS  0x1f
#define TX_NORMAL_DESC_TDES2_TTSE_HBIT_POS  0x1e
#define TX_NORMAL_DESC_TDES2_B2L_HBIT_POS  0x1d
#define TX_NORMAL_DESC_TDES2_VTIR_HBIT_POS  0xf
#define TX_NORMAL_DESC_TDES2_HL_B1L_HBIT_POS  0xd
#define RX_ERROR_COUNTERS_RX_ERRORS_FRAME_ERROR_HBIT_POS  0x3
#define RX_ERROR_COUNTERS_RX_ERRORS_CRC_ERROR_HBIT_POS  0x2
#define RX_ERROR_COUNTERS_RX_ERRORS_OVERRUN_ERROR_HBIT_POS  0x1
#define RX_PKT_FEATURES_VLAN_TAG_VT_HBIT_POS  0xf
#define RX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_HBIT_POS  0x1
#define RX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_DONE_HBIT_POS  0
#define TX_PKT_FEATURES_MSS_MSS_HBIT_POS  0x3f
#define TX_PKT_FEATURES_VLAN_TAG_VT_HBIT_POS  0xf
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_HBIT_POS  0x3
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_HBIT_POS  0x2
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_HBIT_POS  0x1
#define TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_HBIT_POS  0

/* virtual_registers Register-Field Read-Write Macros */
#define RX_CONTEXT_DESC_RDES3_OWN_MLF_RD(ptr, data)			\
	GET_BITS(RX_CONTEXT_DESC_RDES3_OWN_HBIT_POS,			\
	RX_CONTEXT_DESC_RDES3_OWN_LBIT_POS, ptr, data)

#define RX_CONTEXT_DESC_RDES3_CTXT_MLF_RD(ptr, data)			\
	GET_BITS(RX_CONTEXT_DESC_RDES3_CTXT_HBIT_POS,			\
	RX_CONTEXT_DESC_RDES3_CTXT_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES3_OWN_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES3_OWN_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES3_OWN_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES3_CTXT_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES3_CTXT_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES3_CTXT_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES3_TCMSSV_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES3_TCMSSV_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES3_TCMSSV_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES3_IVTIR_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES3_IVTIR_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES3_IVTIR_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES3_IVLTV_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES3_IVLTV_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES3_IVLTV_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES3_VLTV_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES3_VLTV_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES3_VLTV_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES3_VT_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES3_VT_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES3_VT_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES2_IVT_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES2_IVT_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES2_IVT_LBIT_POS, ptr, data)

#define TX_CONTEXT_DESC_TDES2_MSS_MLF_WR(ptr, data)			\
	SET_BITS(TX_CONTEXT_DESC_TDES2_MSS_HBIT_POS,			\
	TX_CONTEXT_DESC_TDES2_MSS_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_OWN_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_OWN_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_OWN_LBIT_POS, ptr, data)			\

#define RX_NORMAL_DESC_RDES3_LD_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_LD_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_LD_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_RS1V_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_RS1V_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_RS1V_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_RS0V_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_RS0V_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_RS0V_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_CE_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_CE_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_CE_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_OE_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_OE_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_OE_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_RE_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_RE_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_RE_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_LT_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_LT_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_LT_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_ES_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_ES_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_ES_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES3_FL_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES3_FL_HBIT_POS,			\
	RX_NORMAL_DESC_RDES3_FL_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES1_TSA_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES1_TSA_HBIT_POS,			\
	RX_NORMAL_DESC_RDES1_TSA_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES1_IPPE_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES1_IPPE_HBIT_POS,			\
	RX_NORMAL_DESC_RDES1_IPPE_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES1_IPCB_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES1_IPCB_HBIT_POS,			\
	RX_NORMAL_DESC_RDES1_IPCB_LBIT_POS, ptr, data)

#define RX_NORMAL_DESC_RDES1_IPHE_MLF_RD(ptr, data)			\
	GET_BITS(RX_NORMAL_DESC_RDES1_IPHE_HBIT_POS,			\
	RX_NORMAL_DESC_RDES1_IPHE_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_OWN_MLF_RD(ptr, data)			\
	GET_BITS(TX_NORMAL_DESC_TDES3_OWN_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_OWN_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_OWN_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_OWN_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_OWN_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_CTXT_MLF_RD(ptr, data)			\
	GET_BITS(TX_NORMAL_DESC_TDES3_CTXT_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_CTXT_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_CTXT_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_CTXT_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_CTXT_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_FD_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_FD_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_FD_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_LD_MLF_RD(ptr, data)			\
	GET_BITS(TX_NORMAL_DESC_TDES3_LD_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_LD_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_LD_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_LD_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_LD_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_CPC_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_CPC_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_CPC_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_SAIC_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_SAIC_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_SAIC_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_SLOTNUM_TCPHDRLEN_MLF_WR(ptr, data)	\
	SET_BITS(TX_NORMAL_DESC_TDES3_SLOTNUM_TCPHDRLEN_HBIT_POS,	\
	TX_NORMAL_DESC_TDES3_SLOTNUM_TCPHDRLEN_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_TSE_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_TSE_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_TSE_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_CIC_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_CIC_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_CIC_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES3_FL_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES3_FL_HBIT_POS,			\
	TX_NORMAL_DESC_TDES3_FL_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES2_IC_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES2_IC_HBIT_POS,			\
	TX_NORMAL_DESC_TDES2_IC_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES2_TTSE_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES2_TTSE_HBIT_POS,			\
	TX_NORMAL_DESC_TDES2_TTSE_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES2_B2L_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES2_B2L_HBIT_POS,			\
	TX_NORMAL_DESC_TDES2_B2L_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES2_VTIR_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES2_VTIR_HBIT_POS,			\
	TX_NORMAL_DESC_TDES2_VTIR_LBIT_POS, ptr, data)

#define TX_NORMAL_DESC_TDES2_HL_B1L_MLF_WR(ptr, data)			\
	SET_BITS(TX_NORMAL_DESC_TDES2_HL_B1L_HBIT_POS,			\
	TX_NORMAL_DESC_TDES2_HL_B1L_LBIT_POS, ptr, data)

#define RX_ERROR_COUNTERS_RX_ERRORS_FRAME_ERROR_MLF_WR(ptr, data)	\
	SET_BITS(RX_ERROR_COUNTERS_RX_ERRORS_FRAME_ERROR_HBIT_POS,	\
	RX_ERROR_COUNTERS_RX_ERRORS_FRAME_ERROR_LBIT_POS, ptr, data)

#define RX_ERROR_COUNTERS_RX_ERRORS_CRC_ERROR_MLF_WR(ptr, data)		\
	SET_BITS(RX_ERROR_COUNTERS_RX_ERRORS_CRC_ERROR_HBIT_POS,	\
	RX_ERROR_COUNTERS_RX_ERRORS_CRC_ERROR_LBIT_POS, ptr, data)

#define RX_ERROR_COUNTERS_RX_ERRORS_OVERRUN_ERROR_MLF_WR(ptr, data)	\
	SET_BITS(RX_ERROR_COUNTERS_RX_ERRORS_OVERRUN_ERROR_HBIT_POS,	\
	RX_ERROR_COUNTERS_RX_ERRORS_OVERRUN_ERROR_LBIT_POS, ptr, data)

#define RX_ERROR_COUNTERS_RX_ERRORS_LENGTH_ERROR_MLF_WR(ptr, data)	\
	SET_BITS(RX_ERROR_COUNTERS_RX_ERRORS_LENGTH_ERROR_HBIT_POS,	\
	RX_ERROR_COUNTERS_RX_ERRORS_LENGTH_ERROR_LBIT_POS, ptr, data)

#define RX_PKT_FEATURES_VLAN_TAG_VT_MLF_WR(ptr, data)			\
	SET_BITS(RX_PKT_FEATURES_VLAN_TAG_VT_HBIT_POS,			\
	RX_PKT_FEATURES_VLAN_TAG_VT_LBIT_POS, ptr, data)

#define RX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_MLF_WR(ptr, data)	\
	SET_BITS(RX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_HBIT_POS,	\
	RX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_LBIT_POS, ptr, data)

#define RX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_DONE_MLF_WR(ptr, data)	\
	SET_BITS(RX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_DONE_HBIT_POS,	\
	RX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_DONE_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_MSS_MSS_MLF_RD(ptr, data)			\
	GET_BITS(TX_PKT_FEATURES_MSS_MSS_HBIT_POS,			\
	TX_PKT_FEATURES_MSS_MSS_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_VLAN_TAG_VT_MLF_RD(ptr, data)			\
	GET_BITS(TX_PKT_FEATURES_VLAN_TAG_VT_HBIT_POS,			\
	TX_PKT_FEATURES_VLAN_TAG_VT_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_VLAN_TAG_VT_MLF_WR(ptr, data)			\
	SET_BITS(TX_PKT_FEATURES_VLAN_TAG_VT_HBIT_POS,			\
	TX_PKT_FEATURES_VLAN_TAG_VT_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_MLF_RD(ptr, data)	\
	GET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_MLF_WR(ptr, data)	\
	SET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_VLAN_PKT_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_MLF_RD(ptr, data)	\
	GET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_MLF_WR(ptr, data)	\
	SET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_PTP_ENABLE_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_MLF_RD(ptr, data)	\
	GET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_MLF_WR(ptr, data)	\
	SET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_TSO_ENABLE_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_MLF_RD(ptr, data)	\
	GET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_LBIT_POS, ptr, data)

#define TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_MLF_WR(ptr, data)	\
	SET_BITS(TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_HBIT_POS,	\
	TX_PKT_FEATURES_PKT_ATTRIBUTES_CSUM_ENABLE_LBIT_POS, ptr, data)

/* virtual_registers Register Read-Write Macros */

#define MAC_ALPA_PSE_LPOS 7
#define MAC_ALPA_PSE_HPOS 8

#define MAC_ALPA_FD_LPOS 5
#define MAC_ALPA_FD_HPOS 5

#define MAC_AAD_PSE_LPOS 7
#define MAC_AAD_PSE_HPOS 8

#define MAC_AAD_FD_LPOS 5
#define MAC_AAD_FD_HPOS 5

#define MAC_TTN_TXTSSTSHI_LPOS 0
#define MAC_TTN_TXTSSTSHI_HPOS 31

#define MAC_TTSN_TXTSSTSMIS_LPOS 31
#define MAC_TTSN_TXTSSTSMIS_HPOS 31

#define MAC_TTSN_TXTSSTSLO_LPOS 0
#define MAC_TTSN_TXTSSTSLO_HPOS 30

#define MAC_STNSR_TSSS_LPOS 0
#define MAC_STNSR_TSSS_HPOS 30

#define MAC_TCR_TXTSSTSM_LPOS 24
#define MAC_TCR_TXTSSTSM_HPOS 24

#define MAC_TCR_TSCTRLSSR_LPOS 9
#define MAC_TCR_TSCTRLSSR_HPOS 9

#define MAC_TCR_TSADDREG_LPOS 5
#define MAC_TCR_TSADDREG_HPOS 5

#define MAC_TCR_TSUPDT_LPOS 3
#define MAC_TCR_TSUPDT_HPOS 3

#define MAC_TCR_TSINIT_LPOS 2
#define MAC_TCR_TSINIT_HPOS 2

#define MAC_TCR_TSCFUPDT_LPOS 1
#define MAC_TCR_TSCFUPDT_HPOS 1

#define MAC_GMIIDR_GD_LPOS 0
#define MAC_GMIIDR_GD_HPOS 15

#define MAC_GMIIAR_GB_LPOS 0
#define MAC_GMIIAR_GB_HPOS 0

#define MAC_HFR2_TXQCNT_LPOS 6
#define MAC_HFR2_TXQCNT_HPOS 9

#define MAC_HFR2_RXQCNT_LPOS 0
#define MAC_HFR2_RXQCNT_HPOS 3

#define DMA_SR_TI_LPOS 0
#define DMA_SR_TI_HPOS 0

#define DMA_SR_TPS_LPOS 1
#define DMA_SR_TPS_HPOS 1

#define DMA_SR_TBU_LPOS 2
#define DMA_SR_TBU_HPOS 2

#define DMA_SR_RI_LPOS 6
#define DMA_SR_RI_HPOS 6

#define DMA_SR_RBU_LPOS 7
#define DMA_SR_RBU_HPOS 7

#define DMA_SR_RPS_LPOS 8
#define DMA_SR_RPS_HPOS 8

#define DMA_SR_RWT_LPOS 9
#define DMA_SR_RWT_HPOS 9

#define DMA_SR_FBE_LPOS 12
#define DMA_SR_FBE_HPOS 12

#define DMA_ISR_DC0IS_LPOS 0
#define DMA_ISR_DC0IS_HPOS 0

#define DMA_ISR_MTLIS_LPOS 16
#define DMA_ISR_MTLIS_HPOS 16

#define DMA_ISR_MACIS_LPOS 17
#define DMA_ISR_MACIS_HPOS 17

#define DMA_DSR2_TPS7_LPOS 4
#define DMA_DSR2_TPS7_HPOS 7

#define DMA_DSR2_RPS7_LPOS 0
#define DMA_DSR2_RPS7_HPOS 3

#define DMA_DSR1_TPS6_LPOS 28
#define DMA_DSR1_TPS6_HPOS 31

#define DMA_DSR1_RPS6_LPOS 24
#define DMA_DSR1_RPS6_HPOS 27

#define DMA_DSR1_TPS5_LPOS 20
#define DMA_DSR1_TPS5_HPOS 23

#define DMA_DSR1_RPS5_LPOS 16
#define DMA_DSR1_RPS5_HPOS 19

#define DMA_DSR1_TPS4_LPOS 12
#define DMA_DSR1_TPS4_HPOS 15

#define DMA_DSR1_RPS4_LPOS 8
#define DMA_DSR1_RPS4_HPOS 11

#define DMA_DSR1_TPS3_LPOS 4
#define DMA_DSR1_TPS3_HPOS 7

#define DMA_DSR1_RPS3_LPOS 0
#define DMA_DSR1_RPS3_HPOS 3

#define DMA_DSR0_TPS2_LPOS 28
#define DMA_DSR0_TPS2_HPOS 31

#define DMA_DSR0_RPS2_LPOS 24
#define DMA_DSR0_RPS2_HPOS 27

#define DMA_DSR0_TPS1_LPOS 20
#define DMA_DSR0_TPS1_HPOS 23

#define DMA_DSR0_RPS1_LPOS 16
#define DMA_DSR0_RPS1_HPOS 19

#define DMA_DSR0_TPS0_LPOS 12
#define DMA_DSR0_TPS0_HPOS 15

#define DMA_DSR0_RPS0_LPOS 8
#define DMA_DSR0_RPS0_HPOS 11

#define MAC_VLANHTR_VLHT_LPOS 0
#define MAC_VLANHTR_VLHT_HPOS 15

#define DMA_BMR_SWR_LPOS 0
#define DMA_BMR_SWR_HPOS 0

#define MTL_Q0TOMR_FTQ_LPOS 0
#define MTL_Q0TOMR_FTQ_HPOS 0

#define MTL_QTOMR_FTQ_LPOS 0
#define MTL_QTOMR_FTQ_HPOS 0

#define MTL_OMR_DTXSTS_LPOS 1
#define MTL_OMR_DTXSTS_HPOS 1

#define MAC_ISR_PMTIS_LPOS 4
#define MAC_ISR_PMTIS_HPOS 4

#define MAC_ISR_PCSANCIS_LPOS 2
#define MAC_ISR_PCSANCIS_HPOS 2

#define MAC_ISR_PCSLCHGIS_LPOS 1
#define MAC_ISR_PCSLCHGIS_HPOS 1

#define MAC_ISR_RGSMIIS_LPOS 0
#define MAC_ISR_RGSMIIS_HPOS 0

#define MTL_QECR_ABPSSIE_LPOS 24
#define MTL_QECR_ABPSSIE_HPOS 24

#define MAC_ANS_LS_LPOS 2
#define MAC_ANS_LS_HPOS 2

#define GET_VALUE(data, lbit, hbit)					\
	(((data) >> (lbit)) & (~(~0 << ((hbit) - (lbit) + 1))))

#define GET_INDEXED_VALUE(data, lbit, hbit, index)			\
	(GET_VALUE((data), ((lbit) + (index) * ((hbit) - (lbit) + 1)),	\
	((hbit) + (index) * ((hbit) - (lbit) + 1))))
#endif
